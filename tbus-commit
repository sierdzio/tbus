#!/bin/bash
# Commit changes made to the working tree of the repository.
help () {
  echo "tbus-commit - used to commit changes made to the working tree of the repository.

Usage:
  tbus commit <GPG key ID> [other commit options - see manual for git-commit]

Committing requires gpg signature of a person listed in pubkeys directory. If
you want to make unauthorised changes, use git commit instead. Unauthorised
changes will not be accepted by other peers."
}

if [ "${1}" = "-h" ] || [ "${1}" = "--help" ]; then
  help
  exit
fi

# TODO: what if the user has added a public key manually, circumventing tbus-user?
# You need to check that!
LOGIN="${1}"
if [ -f "pubkeys/$LOGIN.asc" ]; then
  echo "Invalid login. You need to use one of the accounts present in pubkeys
directory. Use tbus user -h for more information.
You are not allowed to commit things if you can't sign it with valid GPG key.
You can use standard git to create your commit, but it will not be accepted by
other peers."
  exit
fi

# Entries are separated using space and colon to keep empty parts
#echo $(gpg --list-secret-keys --with-colons)
# TODO: clearly mark newline characters to be sure the algorithm does work

intermediate=:$(gpg --list-secret-keys --with-colons |  tr '[\n]' '[:]')
array="${intermediate// /}"
array=${array//:/ :}

# single entry contains 16 fields
index=0
keyEntry=false
entryFound=false
keyID=""
for x in $array
do
  element=${x:1}
  echo "$index": "$element"

  if [ $index == 15 ]; then
    index=0
  fi

  # entry 0 denotes the type
  if [ $index == 0 ]; then
    if [ "$element" == "sec" ]; then
      keyEntry=true
    else
      keyEntry=false
    fi
  fi

  # entry 4 specifies the Key ID
  if [ $index == 4 ] && [ $keyEntry == true ]; then
    keyID="$element"
  fi

  # entry 9 is the user ID (email)
  if [ $index == 9 ] && [[ "$element" == *"$LOGIN"* ]]; then
    entryFound=true
    break
  fi

  index=$(($index + 1))
done

if [ $entryFound == false ]; then
  echo "Could not find key ID in local keyring. Make sure your GPG setup is correct.
You are not allowed to commit things if you can't sign it with valid GPG key.
You can use standard git to create your commit, but it will not be accepted by
other peers."
  exit
fi

shift
# TODO: make sure the signing will work (is config correct?)
echo "git commit --gpg-sign=$keyID" "$@"
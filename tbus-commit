#!/bin/bash
# Commit changes made to the working tree of the repository.
help () {
  echo "tbus-commit - used to commit changes made to the working tree of the

Committing requires gpg signature of a person listed in pubkeys directory. If
you want to make unauthorised changes, use git commit instead. Unauthorised
changes will not be accepted by other peers."
}

if [ "${1}" = "-h" ] || [ "${1}" = "--help" ]; then
  help
  exit
fi

# TODO: what if the user has added a public key manually, circumventing tbus-user?
# You need to check that!
LOGIN="${1}"
if [ -f "pubkeys/$LOGIN.asc" ]; then
  echo "Invalid login. You need to use one of the accounts present in pubkeys
directory. Use tbus user -h for more information"
  exit
fi

# TODO: find GPG key id for the given public key
# Use gpg --list-secret-keys --with-colons
array=$(gpg --list-secret-keys --with-colons | tr ":" "\n")

# single entry contains 16 fields
index=0
keyEntry=false
entryFound=false
keyID=""
for x in $array
do
  if [ $index == 16 ]; then
    index=0
  fi

  # entry 0 denotes the type
  if [ $index == 0 ]; then
    if [ "$x" == "sec" ]; then
      keyEntry=true
    else
      keyEntry=false
    fi
  fi

  # entry 4 specifies the Key ID
  if [ $index == 4 ] && [ $keyEntry == true ]; then
    keyID="$x"
  fi

  # entry 9 is the user ID (email)
  if [ $index == 4 ] && [ "$x" == "$LOGIN" ]; then
    entryFound=true
    break
  fi

  index=$index + 1
done

if [ -z "$keyID" ]; then
  echo "Could not find key ID in local keyring. Make sure your GPG setup is correct"
  exit
fi

git commit --gpg-sign=$keyID